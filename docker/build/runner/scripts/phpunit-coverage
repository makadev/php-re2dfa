#!/bin/bash

INI_NAME=99-docker-php-ext-xdebug.ini

##
cd /workspace

## invoke composer install if phpunit is missing
if [ ! -f "vendor/phpunit/phpunit/phpunit" ]; then
    composer install
fi

## clean coverage path
rm -f logs/*.cov
rm -f logs/cov.cnt

## enable opcache
sudo /usr/local/bin/opcache-enable

## check and enable xdebug
XDEBUG_ENABLED=
if [ ! -f "/usr/local/etc/php/conf.d/${INI_NAME}" ]; then
    XDEBUG_ENABLED=off
    sudo /usr/local/bin/xdebug-enable
fi

###
cleanup() {
    exitcode=$?
    echo $exitcode EXIT
    ## disable opcode caching
    sudo /usr/local/bin/opcache-disable
    ## disable xdebug if it was disabled before
    if [ -n "${XDEBUG_ENABLED}" ]; then
        sudo /usr/local/bin/xdebug-disable
    fi
    ## exit with original exitcode
    exit $exitcode
}
trap cleanup EXIT

## run phpunit with coverage, exit on fail
vendor/phpunit/phpunit/phpunit -c phpunit.xml "$@" --coverage-html logs/ || exit 1
